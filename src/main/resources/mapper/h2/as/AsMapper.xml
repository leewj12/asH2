<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.inpro.asBoard.as.mapper.AsMapper">

    <!-- =========================================================
         1) 공통 유틸: 날짜 기준 컬럼 선택
         ========================================================= -->
    <sql id="__date_expr_for_filter">
        <choose>
            <when test="dateBy == 'reg'"> A.REG_DATE </when>
            <otherwise>                   A.PLAN_DATE </otherwise>
        </choose>
    </sql>

    <!-- =========================================================
         2) 공통 유틸: 기간 프리셋(today/1w/1m)
         ========================================================= -->
    <sql id="__period_filter_fixed">
        <if test="period != null and period != ''">
            <choose>
                <!-- 오늘: [오늘 00:00, 내일 00:00) -->
                <when test="period == 'today'">
                    AND <include refid="__date_expr_for_filter"/> &gt;= CAST(CURRENT_DATE AS TIMESTAMP)
                    AND <include refid="__date_expr_for_filter"/> &lt;  CAST(DATEADD('DAY', 1, CURRENT_DATE) AS TIMESTAMP)
                </when>

                <!-- 이번주(월~일): 월요일 00:00 ~ 다음주 월요일 00:00
                     H2: DAY_OF_WEEK(Sun=1..Sat=7) 기준
                     monday = CURRENT_DATE - ((DOW+5) % 7)
                -->
                <when test="period == '1w'">
                    AND <include refid="__date_expr_for_filter"/> &gt;=
                    CAST(DATEADD('DAY', -MOD(DAY_OF_WEEK(CURRENT_DATE)+5, 7), CURRENT_DATE) AS TIMESTAMP)
                    AND <include refid="__date_expr_for_filter"/> &lt;
                    CAST(DATEADD('DAY', 7 - MOD(DAY_OF_WEEK(CURRENT_DATE)+5, 7), CURRENT_DATE) AS TIMESTAMP)
                </when>

                <!-- 이번달: 1일 00:00 ~ 다음달 1일 00:00 -->
                <when test="period == '1m'">
                    AND <include refid="__date_expr_for_filter"/> &gt;=
                    CAST(DATEADD('DAY', 1 - DAY_OF_MONTH(CURRENT_DATE), CURRENT_DATE) AS TIMESTAMP)
                    AND <include refid="__date_expr_for_filter"/> &lt;
                    CAST(DATEADD('MONTH', 1, DATEADD('DAY', 1 - DAY_OF_MONTH(CURRENT_DATE), CURRENT_DATE)) AS TIMESTAMP)
                </when>
            </choose>
        </if>
    </sql>

    <!-- =========================================================
         3) 공통 유틸: 사용자 입력 기간 (start/end)
         ========================================================= -->
    <sql id="__start_end_filter">
        <if test="startDate != null">
            AND <include refid="__date_expr_for_filter"/> &gt;= #{startDate}
        </if>
        <if test="endDate != null">
            AND <include refid="__date_expr_for_filter"/> &lt;= #{endDate}
        </if>
    </sql>

    <!-- =========================================================
         농가 목록 조회
         ========================================================= -->
    <select id="selectFarmList" resultType="map">
        SELECT FARM_CODE, FARM_NAME
        FROM SF_TBL_FARM
        WHERE USE_FLAG = '1'
        ORDER BY FARM_CODE
    </select>

    <!-- =========================================================
         농가 목록 검색
         ========================================================= -->
    <select id="searchFarmList" resultType="map">
        SELECT FARM_CODE, FARM_NAME
        FROM SF_TBL_FARM
        WHERE USE_FLAG = '1'
        <if test="keyword != null and keyword != ''">
            AND (
            FARM_NAME LIKE CONCAT('%', #{keyword}, '%')
            OR FARM_CODE LIKE CONCAT('%', #{keyword}, '%')
            )
        </if>
        ORDER BY FARM_CODE
    </select>

    <!-- =========================================================
         농가 장비 테이블 존재 목록
         ========================================================= -->
    <select id="selectCategoryList" resultType="string">
        SELECT 'SF_TBL_AIRCON'
        WHERE EXISTS (SELECT 1 FROM SF_TBL_AIRCON WHERE FARM_CODE = #{farmCode})
        UNION ALL
        SELECT 'SF_TBL_BRUSH'
        WHERE EXISTS (SELECT 1 FROM SF_TBL_BRUSH WHERE FARM_CODE = #{farmCode})
        UNION ALL
        SELECT 'SF_TBL_COOLER'
        WHERE EXISTS (SELECT 1 FROM SF_TBL_COOLER WHERE FARM_CODE = #{farmCode})
        UNION ALL
        SELECT 'SF_TBL_EQMNT'
        WHERE EXISTS (SELECT 1 FROM SF_TBL_EQMNT WHERE FARM_CODE = #{farmCode})
        UNION ALL
        SELECT 'SF_TBL_ENVIRON'
        WHERE EXISTS (SELECT 1 FROM SF_TBL_ENVIRON WHERE FARM_CODE = #{farmCode})
        UNION ALL
        SELECT 'SF_TBL_ENVIRON_L'
        WHERE EXISTS (SELECT 1 FROM SF_TBL_ENVIRON_L WHERE FARM_CODE = #{farmCode})
        UNION ALL
        SELECT 'SF_TBL_FEEDBIN'
        WHERE EXISTS (SELECT 1 FROM SF_TBL_FEEDBIN WHERE FARM_CODE = #{farmCode})
        UNION ALL
        SELECT 'SF_TBL_FEEDBIN_B'
        WHERE EXISTS (SELECT 1 FROM SF_TBL_FEEDBIN_B WHERE FARM_CODE = #{farmCode})
        UNION ALL
        SELECT 'SF_TBL_FEEDBIN_L'
        WHERE EXISTS (SELECT 1 FROM SF_TBL_FEEDBIN_L WHERE FARM_CODE = #{farmCode})
        UNION ALL
        SELECT 'SF_TBL_FOG'
        WHERE EXISTS (SELECT 1 FROM SF_TBL_FOG WHERE FARM_CODE = #{farmCode})
        UNION ALL
        SELECT 'SF_TBL_LIGHT'
        WHERE EXISTS (SELECT 1 FROM SF_TBL_LIGHT WHERE FARM_CODE = #{farmCode})
        UNION ALL
        SELECT 'SF_TBL_METER'
        WHERE EXISTS (SELECT 1 FROM SF_TBL_METER WHERE FARM_CODE = #{farmCode})
        UNION ALL
        SELECT 'SF_TBL_METER_S'
        WHERE EXISTS (SELECT 1 FROM SF_TBL_METER_S WHERE FARM_CODE = #{farmCode})
        UNION ALL
        SELECT 'SF_TBL_ROOF'
        WHERE EXISTS (SELECT 1 FROM SF_TBL_ROOF WHERE FARM_CODE = #{farmCode})
        UNION ALL
        SELECT 'SF_TBL_STER'
        WHERE EXISTS (SELECT 1 FROM SF_TBL_STER WHERE FARM_CODE = #{farmCode})
        UNION ALL
        SELECT 'SF_TBL_STER_Q'
        WHERE EXISTS (SELECT 1 FROM SF_TBL_STER_Q WHERE FARM_CODE = #{farmCode})
        UNION ALL
        SELECT 'SF_TBL_STER_V'
        WHERE EXISTS (SELECT 1 FROM SF_TBL_STER_V WHERE FARM_CODE = #{farmCode})
        UNION ALL
        SELECT 'SF_TBL_VEHICLE'
        WHERE EXISTS (SELECT 1 FROM SF_TBL_VEHICLE WHERE FARM_CODE = #{farmCode})
        UNION ALL
        SELECT 'SF_TBL_VEHICLE_A'
        WHERE EXISTS (SELECT 1 FROM SF_TBL_VEHICLE_A WHERE FARM_CODE = #{farmCode})
        UNION ALL
        SELECT 'SF_TBL_VENTIL'
        WHERE EXISTS (SELECT 1 FROM SF_TBL_VENTIL WHERE FARM_CODE = #{farmCode})
        UNION ALL
        SELECT 'SF_TBL_VENTIL_C'
        WHERE EXISTS (SELECT 1 FROM SF_TBL_VENTIL_C WHERE FARM_CODE = #{farmCode})
        UNION ALL
        SELECT 'SF_TBL_VENTIL_D'
        WHERE EXISTS (SELECT 1 FROM SF_TBL_VENTIL_D WHERE FARM_CODE = #{farmCode})
        UNION ALL
        SELECT 'SF_TBL_VENTIL_P'
        WHERE EXISTS (SELECT 1 FROM SF_TBL_VENTIL_P WHERE FARM_CODE = #{farmCode})
        UNION ALL
        SELECT 'SF_TBL_VENTIL_S'
        WHERE EXISTS (SELECT 1 FROM SF_TBL_VENTIL_S WHERE FARM_CODE = #{farmCode})
        UNION ALL
        SELECT 'SF_TBL_WIND'
        WHERE EXISTS (SELECT 1 FROM SF_TBL_WIND WHERE FARM_CODE = #{farmCode})
        UNION ALL
        SELECT 'SF_TBL_WIND_D'
        WHERE EXISTS (SELECT 1 FROM SF_TBL_WIND_D WHERE FARM_CODE = #{farmCode})
        ORDER BY 1
    </select>

    <!-- =========================================================
         농가 등록 장비 목록 (동적 테이블)
         ========================================================= -->
    <select id="selectEquipmentListByTable" resultType="map" parameterType="map">
        <!-- 안전 화이트리스트 매핑 -->
        <choose>
            <when test="tableName == 'SF_TBL_EQMNT'">
                <bind name="_tbl"  value="'SF_TBL_EQMNT'"/>
                <bind name="_sub"  value="'EQMNT_KIND'"/>
                <bind name="_name" value="'EQMNT_NAME'"/>
                <bind name="_date" value="'USE_DATE'"/>
            </when>

            <when test="tableName == 'SF_TBL_AIRCON'">
                <bind name="_tbl"  value="'SF_TBL_AIRCON'"/>
                <bind name="_sub"  value="'SUB_SEQ'"/>
                <bind name="_name" value="'AIRCON_NAME'"/>
                <bind name="_date" value="'USE_DATETIME'"/>
            </when>
            <when test="tableName == 'SF_TBL_BRUSH'">
                <bind name="_tbl"  value="'SF_TBL_BRUSH'"/>
                <bind name="_sub"  value="'SUB_SEQ'"/>
                <bind name="_name" value="'BRUSH_NAME'"/>
                <bind name="_date" value="'USE_DATE'"/>
            </when>
            <when test="tableName == 'SF_TBL_COOLER'">
                <bind name="_tbl"  value="'SF_TBL_COOLER'"/>
                <bind name="_sub"  value="'SUB_SEQ'"/>
                <bind name="_name" value="'COOLER_NAME'"/>
                <bind name="_date" value="'USE_DATE'"/>
            </when>
            <when test="tableName == 'SF_TBL_ENVIRON'">
                <bind name="_tbl"  value="'SF_TBL_ENVIRON'"/>
                <bind name="_sub"  value="'SUB_SEQ'"/>
                <bind name="_name" value="'ENVIRON_NAME'"/>
                <bind name="_date" value="'USE_DATE'"/>
            </when>
            <when test="tableName == 'SF_TBL_ENVIRON_L'">
                <bind name="_tbl"  value="'SF_TBL_ENVIRON_L'"/>
                <bind name="_sub"  value="'SUB_SEQ'"/>
                <bind name="_name" value="'DEVICE_NAME'"/>
                <bind name="_date" value="'WRT_DATETIME'"/>
            </when>
            <when test="tableName == 'SF_TBL_FEEDBIN'">
                <bind name="_tbl"  value="'SF_TBL_FEEDBIN'"/>
                <bind name="_sub"  value="'SUB_SEQ'"/>
                <bind name="_name" value="'FEED_NAME'"/>
                <bind name="_date" value="'USE_DATE'"/>
            </when>
            <when test="tableName == 'SF_TBL_FEEDBIN_B'">
                <bind name="_tbl"  value="'SF_TBL_FEEDBIN_B'"/>
                <bind name="_sub"  value="'SUB_SEQ'"/>
                <bind name="_name" value="'FEED_NAME'"/>
                <bind name="_date" value="'USE_DATE'"/>
            </when>
            <when test="tableName == 'SF_TBL_FEEDBIN_L'">
                <bind name="_tbl"  value="'SF_TBL_FEEDBIN_L'"/>
                <bind name="_sub"  value="'SUB_SEQ'"/>
                <bind name="_name" value="'FEED_NAME'"/>
                <bind name="_date" value="'USE_DATE'"/>
            </when>
            <when test="tableName == 'SF_TBL_FOG'">
                <bind name="_tbl"  value="'SF_TBL_FOG'"/>
                <bind name="_sub"  value="'SUB_SEQ'"/>
                <bind name="_name" value="'FOG_NAME'"/>
                <bind name="_date" value="'USE_DATE'"/>
            </when>
            <when test="tableName == 'SF_TBL_LIGHT'">
                <bind name="_tbl"  value="'SF_TBL_LIGHT'"/>
                <bind name="_sub"  value="'SUB_SEQ'"/>
                <bind name="_name" value="'LIGHT_NAME'"/>
                <bind name="_date" value="'USE_DATE'"/>
            </when>
            <when test="tableName == 'SF_TBL_METER'">
                <bind name="_tbl"  value="'SF_TBL_METER'"/>
                <bind name="_sub"  value="'SUB_SEQ'"/>
                <bind name="_name" value="'METER_NAME'"/>
                <bind name="_date" value="'USE_DATE'"/>
            </when>
            <when test="tableName == 'SF_TBL_METER_S'">
                <bind name="_tbl"  value="'SF_TBL_METER_S'"/>
                <bind name="_sub"  value="'SUB_SEQ'"/>
                <bind name="_name" value="'METER_NAME'"/>
                <bind name="_date" value="'USE_DATETIME'"/>
            </when>
            <when test="tableName == 'SF_TBL_ROOF'">
                <bind name="_tbl"  value="'SF_TBL_ROOF'"/>
                <bind name="_sub"  value="'SUB_SEQ'"/>
                <bind name="_name" value="'ROOF_NAME'"/>
                <bind name="_date" value="'USE_DATE'"/>
            </when>
            <when test="tableName == 'SF_TBL_STER'">
                <bind name="_tbl"  value="'SF_TBL_STER'"/>
                <bind name="_sub"  value="'SUB_SEQ'"/>
                <bind name="_name" value="'STER_NAME'"/>
                <bind name="_date" value="'USE_DATE'"/>
            </when>
            <when test="tableName == 'SF_TBL_STER_Q'">
                <bind name="_tbl"  value="'SF_TBL_STER_Q'"/>
                <bind name="_sub"  value="'SUB_SEQ'"/>
                <bind name="_name" value="'STER_NAME'"/>
                <bind name="_date" value="'USE_DATETIME'"/>
            </when>
            <when test="tableName == 'SF_TBL_STER_V'">
                <bind name="_tbl"  value="'SF_TBL_STER_V'"/>
                <bind name="_sub"  value="'SUB_SEQ'"/>
                <bind name="_name" value="'STER_NAME'"/>
                <bind name="_date" value="'USE_DATE'"/>
            </when>
            <when test="tableName == 'SF_TBL_VEHICLE'">
                <bind name="_tbl"  value="'SF_TBL_VEHICLE'"/>
                <bind name="_sub"  value="'SUB_SEQ'"/>
                <bind name="_name" value="'VEHICLE_NAME'"/>
                <bind name="_date" value="'CAST(NULL AS TIMESTAMP)'"/>
            </when>
            <when test="tableName == 'SF_TBL_VEHICLE_A'">
                <bind name="_tbl"  value="'SF_TBL_VEHICLE_A'"/>
                <bind name="_sub"  value="'SUB_SEQ'"/>
                <bind name="_name" value="'VEHICLE_NAME'"/>
                <bind name="_date" value="'USE_DATETIME'"/>
            </when>
            <when test="tableName == 'SF_TBL_VENTIL'">
                <bind name="_tbl"  value="'SF_TBL_VENTIL'"/>
                <bind name="_sub"  value="'SUB_SEQ'"/>
                <bind name="_name" value="'VENTIL_NAME'"/>
                <bind name="_date" value="'USE_DATE'"/>
            </when>
            <when test="tableName == 'SF_TBL_VENTIL_C'">
                <bind name="_tbl"  value="'SF_TBL_VENTIL_C'"/>
                <bind name="_sub"  value="'SUB_SEQ'"/>
                <bind name="_name" value="'VENTIL_NAME'"/>
                <bind name="_date" value="'USE_DATETIME'"/>
            </when>
            <when test="tableName == 'SF_TBL_VENTIL_D'">
                <bind name="_tbl"  value="'SF_TBL_VENTIL_D'"/>
                <bind name="_sub"  value="'SUB_SEQ'"/>
                <bind name="_name" value="'VENTIL_NAME'"/>
                <bind name="_date" value="'USE_DATETIME'"/>
            </when>
            <when test="tableName == 'SF_TBL_VENTIL_P'">
                <bind name="_tbl"  value="'SF_TBL_VENTIL_P'"/>
                <bind name="_sub"  value="'SUB_SEQ'"/>
                <bind name="_name" value="'VENTIL_NAME'"/>
                <bind name="_date" value="'USE_DATETIME'"/>
            </when>
            <when test="tableName == 'SF_TBL_VENTIL_S'">
                <bind name="_tbl"  value="'SF_TBL_VENTIL_S'"/>
                <bind name="_sub"  value="'SUB_SEQ'"/>
                <bind name="_name" value="'VENTIL_NAME'"/>
                <bind name="_date" value="'USE_DATETIME'"/>
            </when>
            <when test="tableName == 'SF_TBL_WIND'">
                <bind name="_tbl"  value="'SF_TBL_WIND'"/>
                <bind name="_sub"  value="'SUB_SEQ'"/>
                <bind name="_name" value="'WIND_NAME'"/>
                <bind name="_date" value="'USE_DATE'"/>
            </when>
            <when test="tableName == 'SF_TBL_WIND_D'">
                <bind name="_tbl"  value="'SF_TBL_WIND_D'"/>
                <bind name="_sub"  value="'SUB_SEQ'"/>
                <bind name="_name" value="'WIND_NAME'"/>
                <bind name="_date" value="'USE_DATE'"/>
            </when>
            <otherwise>
                <bind name="_invalid" value="1"/>
            </otherwise>
        </choose>

        <choose>
            <when test="_invalid == null">
                SELECT
                FARM_CODE,
                EQMNT_SEQ,
                ${_sub}  AS SUB_SEQ,
                ${_name} AS EQMNT_NAME,
                ${_date} AS USE_DATE
                FROM ${_tbl}
                WHERE FARM_CODE = #{farmCode}
                ORDER BY ${_name}
            </when>
            <otherwise>
                SELECT NULL WHERE 1=0
            </otherwise>
        </choose>
    </select>

    <!-- =========================================================
         AS 접수 등록/수정
         ========================================================= -->
    <insert id="insertAsHeader" useGeneratedKeys="true" keyProperty="asId">
        INSERT INTO SF_TBL_AS_HEADER (
        FARM_CODE, REQ_DATE, REQ_USER, AS_TYPE, REQ_CONTENT,
        AS_MANAGER, AS_RESULT, ETC, USE_FLAG, STATUS_FLAG, REG_DATE
        ) VALUES (
        #{farmCode}, #{reqDate, jdbcType=TIMESTAMP}, #{reqUser}, #{asType}, #{reqContent},
        #{asManager}, #{asResult}, #{etc}, #{useFlag}, #{statusFlag}, CURRENT_TIMESTAMP
        )
    </insert>

    <update id="updateAsHeader">
        UPDATE SF_TBL_AS_HEADER
        SET
        REQ_DATE = #{reqDate, jdbcType=TIMESTAMP},
        UPD_DATE = CURRENT_TIMESTAMP,
        REQ_USER = #{reqUser},
        AS_TYPE = #{asType},
        REQ_CONTENT = #{reqContent},
        AS_MANAGER = #{asManager},
        AS_RESULT = #{asResult},
        ETC = #{etc},
        STATUS_FLAG = #{statusFlag}
        WHERE AS_ID = #{asId}
    </update>

    <!-- =========================================================
         상세 조회 (OUTER APPLY 제거, CTE 집계)
         ========================================================= -->
    <select id="selectAsDetail" parameterType="long" resultType="AsDto">
        WITH
        FUTURE AS (
        SELECT AS_ID, MIN(PLAN_DATE) AS PLAN_DATE
        FROM SF_TBL_AS_SCHEDULE
        WHERE USE_FLAG='1' AND CAST(PLAN_DATE AS DATE) &gt;= CURRENT_DATE
        GROUP BY AS_ID
        ),
        ANYPLAN AS (
        SELECT AS_ID, MIN(PLAN_DATE) AS PLAN_DATE
        FROM SF_TBL_AS_SCHEDULE
        WHERE USE_FLAG='1'
        GROUP BY AS_ID
        ),
        STAT AS (
        SELECT
        AS_ID,
        COUNT(*) AS TOTAL,
        SUM(CASE WHEN COMPLETE_DATE &lt;= CURRENT_TIMESTAMP THEN 1 ELSE 0 END) AS DONE_CNT,
        MIN(CAST(CASE WHEN COMPLETE_DATE IS NULL THEN PLAN_DATE END AS DATE)) AS FIRST_PENDING_PLAN
        FROM SF_TBL_AS_SCHEDULE
        WHERE USE_FLAG='1'
        GROUP BY AS_ID
        )
        SELECT
        H.AS_ID, H.FARM_CODE, H.REQ_DATE, H.REQ_USER, H.AS_TYPE, H.REQ_CONTENT,
        H.AS_MANAGER, H.STATUS_FLAG, H.AS_RESULT, H.ETC, H.REG_DATE, H.UPD_DATE, H.USE_FLAG,
        F.FARM_NAME, F.REGION_NAME, F.FARMER_NAME, F.PHONE_NUMB, F.FARM_ADDR1, F.FARM_ADDR2, F.PROJECT_NAME,
        COALESCE(FUTURE.PLAN_DATE, ANYPLAN.PLAN_DATE) AS PLAN_DATE,
        CASE
        WHEN H.STATUS_FLAG = '0' THEN '보류'
        WHEN COALESCE(STAT.TOTAL,0) = 0 THEN '대기'
        WHEN COALESCE(STAT.DONE_CNT,0) = COALESCE(STAT.TOTAL,0) AND COALESCE(STAT.TOTAL,0) &gt; 0 THEN '완료'
        WHEN COALESCE(STAT.DONE_CNT,0) &lt; COALESCE(STAT.TOTAL,0) AND STAT.FIRST_PENDING_PLAN &lt;  CURRENT_DATE THEN '지연'
        WHEN COALESCE(STAT.DONE_CNT,0) &lt; COALESCE(STAT.TOTAL,0) AND STAT.FIRST_PENDING_PLAN =  CURRENT_DATE THEN '임박'
        WHEN COALESCE(STAT.DONE_CNT,0) &gt; 0 AND COALESCE(STAT.DONE_CNT,0) &lt; COALESCE(STAT.TOTAL,0) THEN '진행중'
        ELSE '대기'
        END AS STATUS_LABEL
        FROM SF_TBL_AS_HEADER H
        LEFT JOIN SF_TBL_FARM F   ON F.FARM_CODE = H.FARM_CODE
        LEFT JOIN FUTURE   ON FUTURE.AS_ID = H.AS_ID
        LEFT JOIN ANYPLAN  ON ANYPLAN.AS_ID = H.AS_ID
        LEFT JOIN STAT     ON STAT.AS_ID = H.AS_ID
        WHERE H.AS_ID = #{asId} AND H.USE_FLAG='1'
    </select>

    <!-- =========================================================
         장비 등록/조회/삭제
         ========================================================= -->
    <insert id="insertAsEquip">
        INSERT INTO SF_TBL_AS_EQUIP (
        AS_ID, TABLE_NAME, EQMNT_SEQ, SUB_SEQ, EQMNT_KIND,
        EQMNT_NAME, USE_DATE, USE_FLAG
        ) VALUES (
        #{asId}, #{tableName}, #{eqmntSeq}, #{subSeq}, #{eqmntKind},
        #{eqmntName}, #{useDate, jdbcType=TIMESTAMP}, #{useFlag}
        )
    </insert>

    <resultMap id="AsEquipResultMap" type="AsEquipDto">
        <result column="AS_ID" property="asId"/>
        <result column="TABLE_NAME" property="tableName"/>
        <result column="EQMNT_SEQ" property="eqmntSeq"/>
        <result column="SUB_SEQ" property="subSeq"/>
        <result column="EQMNT_KIND" property="eqmntKind"/>
        <result column="EQMNT_NAME" property="eqmntName"/>
        <result column="USE_DATE" property="useDate"/>
        <result column="USE_FLAG" property="useFlag"/>
    </resultMap>

    <select id="selectEquipListByAsId" resultMap="AsEquipResultMap">
        SELECT E.AS_EQUIP_ID, E.AS_ID, E.TABLE_NAME, E.EQMNT_SEQ,
        E.SUB_SEQ, E.EQMNT_KIND, E.EQMNT_NAME, E.USE_DATE, E.USE_FLAG
        FROM SF_TBL_AS_EQUIP E
        WHERE AS_ID = #{asId} AND USE_FLAG = '1'
    </select>

    <update id="deleteAsEquipByAsId">
        UPDATE SF_TBL_AS_EQUIP SET USE_FLAG = '0' WHERE AS_ID = #{asId}
    </update>

    <delete id="deleteEquipHardByAsId">
        DELETE FROM SF_TBL_AS_EQUIP WHERE AS_ID = #{asId}
    </delete>

    <!-- =========================================================
         접수 삭제 (논리)
         ========================================================= -->
    <update id="deleteAsHeader">
        UPDATE SF_TBL_AS_HEADER SET USE_FLAG = '0' WHERE AS_ID = #{asId}
    </update>

    <!-- =========================================================
         일정 등록/수정/삭제
         ========================================================= -->
    <insert id="insertSchedule" parameterType="AsScheduleDto">
        INSERT INTO SF_TBL_AS_SCHEDULE (
        AS_ID, PLAN_DATE, COMPLETE_DATE, AS_CONTENT, REG_DATE, UPD_DATE, USE_FLAG
        ) VALUES (
        #{asId}, #{planDate}, #{completeDate}, #{asContent}, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, #{useFlag}
        )
    </insert>

    <update id="updateSchedule" parameterType="AsScheduleDto">
        UPDATE SF_TBL_AS_SCHEDULE
        SET PLAN_DATE = #{planDate},
        COMPLETE_DATE = #{completeDate},
        AS_CONTENT = #{asContent},
        UPD_DATE = CURRENT_TIMESTAMP
        WHERE SCHEDULE_ID = #{scheduleId}
    </update>

    <update id="deleteScheduleByAsIdSoft">
        UPDATE SF_TBL_AS_SCHEDULE SET USE_FLAG = '0' WHERE AS_ID = #{asId}
    </update>

    <delete id="deleteScheduleByAsId">
        DELETE FROM SF_TBL_AS_SCHEDULE WHERE AS_ID = #{asId}
    </delete>

    <select id="selectScheduleListByAsId" resultType="AsScheduleDto">
        SELECT SCHEDULE_ID, AS_ID, PLAN_DATE, COMPLETE_DATE, AS_CONTENT, REG_DATE, UPD_DATE, USE_FLAG
        FROM SF_TBL_AS_SCHEDULE
        WHERE AS_ID = #{asId} AND USE_FLAG = '1'
        ORDER BY PLAN_DATE
    </select>

    <select id="selectAllForSchedule" resultType="AsScheduleDto">
        SELECT S.AS_ID, S.PLAN_DATE, S.COMPLETE_DATE, S.AS_CONTENT,
        H.FARM_CODE, F.FARM_NAME, F.REGION_NAME
        FROM SF_TBL_AS_SCHEDULE S
        JOIN SF_TBL_AS_HEADER H ON S.AS_ID = H.AS_ID AND H.USE_FLAG='1' AND H.STATUS_FLAG='1'
        JOIN SF_TBL_FARM    F ON H.FARM_CODE = F.FARM_CODE AND F.USE_FLAG='1'
        WHERE S.USE_FLAG='1'
    </select>

    <!-- =========================================================
         파일 등록/조회/삭제
         ========================================================= -->
    <insert id="insertAsFile" parameterType="AsFileDto">
        INSERT INTO SF_TBL_AS_FILE (
        AS_ID, ORIGINAL_NAME, UUID_NAME, FILE_PATH, FILE_SIZE, FILE_TYPE, USE_FLAG
        ) VALUES (
        #{asId}, #{originalName}, #{uuidName}, #{filePath}, #{fileSize}, #{fileType}, #{useFlag}
        )
    </insert>

    <select id="selectFileListByAsId" resultType="AsFileDto">
        SELECT FILE_ID, AS_ID, ORIGINAL_NAME, UUID_NAME, FILE_PATH, FILE_SIZE, FILE_TYPE, REG_DATE, USE_FLAG
        FROM SF_TBL_AS_FILE
        WHERE AS_ID = #{asId} AND USE_FLAG='1'
        ORDER BY FILE_ID
    </select>

    <select id="selectFilesByIds" resultType="AsFileDto">
        SELECT FILE_ID, FILE_PATH, UUID_NAME
        FROM SF_TBL_AS_FILE
        WHERE FILE_ID IN
        <foreach item="id" collection="fileIds" open="(" separator="," close=")">#{id}</foreach>
    </select>

    <update id="deleteAsFilesByAsId">
        UPDATE SF_TBL_AS_FILE
        SET USE_FLAG='0'
        WHERE AS_ID = #{asId}
    </update>

    <delete id="deleteFilesByIdsHard">
        DELETE FROM SF_TBL_AS_FILE
        WHERE FILE_ID IN
        <foreach item="id" collection="fileIds" open="(" separator="," close=")">#{id}</foreach>
    </delete>

    <!-- =========================================================
         AS 접수 목록(필터/정렬/페이징) — ROW_NUMBER 페이징(H2)
         ========================================================= -->
    <select id="selectAsListFiltered" parameterType="map" resultType="AsDto">
        WITH
        FUTURE_SCH AS (
        SELECT AS_ID, MIN(PLAN_DATE) AS PLAN_DATE
        FROM SF_TBL_AS_SCHEDULE
        WHERE USE_FLAG='1' AND CAST(PLAN_DATE AS DATE) &gt;= CURRENT_DATE
        GROUP BY AS_ID
        ),
        ANY_SCH AS (
        SELECT AS_ID, MIN(PLAN_DATE) AS PLAN_DATE
        FROM SF_TBL_AS_SCHEDULE
        WHERE USE_FLAG='1'
        GROUP BY AS_ID
        ),
        STAT AS (
        SELECT
        AS_ID,
        COUNT(*) AS TOTAL,
        SUM(CASE WHEN COMPLETE_DATE &lt;= CURRENT_TIMESTAMP THEN 1 ELSE 0 END) AS DONE_CNT,
        MIN(CAST(CASE WHEN COMPLETE_DATE IS NULL THEN PLAN_DATE END AS DATE)) AS FIRST_PENDING_PLAN
        FROM SF_TBL_AS_SCHEDULE
        WHERE USE_FLAG='1'
        GROUP BY AS_ID
        ),
        A AS (
        SELECT
        H.AS_ID,
        H.FARM_CODE,
        F.FARM_NAME,
        F.REGION_NAME,
        F.FARMER_NAME,
        F.PHONE_NUMB,
        F.FARM_ADDR1,
        F.FARM_ADDR2,
        F.PROJECT_NAME,
        H.REQ_DATE,
        H.REQ_USER,
        H.AS_TYPE,
        H.AS_MANAGER,
        H.REQ_CONTENT,
        H.AS_RESULT,
        H.ETC,
        H.REG_DATE,
        H.UPD_DATE,
        H.USE_FLAG,
        H.STATUS_FLAG,
        COALESCE(FUTURE_SCH.PLAN_DATE, ANY_SCH.PLAN_DATE) AS PLAN_DATE,
        CASE
        WHEN H.STATUS_FLAG = '0' THEN '보류'
        WHEN COALESCE(STAT.TOTAL,0) = 0 THEN '대기'
        WHEN COALESCE(STAT.DONE_CNT,0) = COALESCE(STAT.TOTAL,0) AND COALESCE(STAT.TOTAL,0) &gt; 0 THEN '완료'
        WHEN COALESCE(STAT.DONE_CNT,0) &lt; COALESCE(STAT.TOTAL,0) AND STAT.FIRST_PENDING_PLAN &lt;  CURRENT_DATE THEN '지연'
        WHEN COALESCE(STAT.DONE_CNT,0) &lt; COALESCE(STAT.TOTAL,0) AND STAT.FIRST_PENDING_PLAN =  CURRENT_DATE THEN '임박'
        WHEN COALESCE(STAT.DONE_CNT,0) &gt; 0 AND COALESCE(STAT.DONE_CNT,0) &lt; COALESCE(STAT.TOTAL,0) THEN '진행중'
        ELSE '대기'
        END AS STATUS_LABEL
        FROM  SF_TBL_AS_HEADER H
        LEFT  JOIN SF_TBL_FARM  F ON H.FARM_CODE = F.FARM_CODE
        LEFT  JOIN FUTURE_SCH ON FUTURE_SCH.AS_ID = H.AS_ID
        LEFT  JOIN ANY_SCH    ON ANY_SCH.AS_ID    = H.AS_ID
        LEFT  JOIN STAT       ON STAT.AS_ID       = H.AS_ID
        WHERE H.USE_FLAG = '1'
        <if test="includeHold != true">
            AND H.STATUS_FLAG &lt;&gt; '0'
        </if>
        <if test="q != null and q != ''">
            AND (
            F.FARM_NAME     LIKE CONCAT('%', #{q}, '%')
            OR F.FARM_CODE    LIKE CONCAT('%', #{q}, '%')
            OR F.PROJECT_NAME LIKE CONCAT('%', #{q}, '%')
            OR F.REGION_NAME  LIKE CONCAT('%', #{q}, '%')
            OR H.AS_TYPE      LIKE CONCAT('%', #{q}, '%')
            OR H.AS_MANAGER   LIKE CONCAT('%', #{q}, '%')
            OR H.REQ_USER     LIKE CONCAT('%', #{q}, '%')
            OR H.REQ_CONTENT  LIKE CONCAT('%', #{q}, '%')
            )
        </if>
        ),
        FILT AS (
        SELECT * FROM A
        <where>
            <include refid="__period_filter_fixed"/>
            <include refid="__start_end_filter"/>

            <if test="farms != null and farms.size > 0">
                AND (
                <foreach item="fc" collection="farms" separator=" OR ">
                    (FARM_CODE = #{fc} OR FARM_NAME LIKE CONCAT('%', #{fc}, '%'))
                </foreach>
                )
            </if>

            <if test="(types != null and types.size > 0) or includeEtc">
                AND (
                <if test="types != null and types.size > 0">
                    AS_TYPE IN
                    <foreach item="t" collection="types" open="(" close=")" separator=",">#{t}</foreach>
                </if>
                <if test="includeEtc">
                    <if test="types != null and types.size > 0"> OR </if>
                    ( AS_TYPE IS NULL
                    OR TRIM(BOTH FROM AS_TYPE) = ''
                    OR AS_TYPE NOT IN ('장비','네트워크','모듈') )
                </if>
                )
            </if>

            <if test="statuses != null and statuses.size > 0">
                AND STATUS_LABEL IN
                <foreach item="s" collection="statuses" open="(" close=")" separator=",">#{s}</foreach>
            </if>

            <if test="(statuses == null or statuses.size == 0)
                          and asStatus != null and asStatus != '' and asStatus != '전체'">
                AND STATUS_LABEL = #{asStatus}
            </if>

            <if test="(tables != null and tables.size > 0) or (equipName != null and equipName != '')">
                AND EXISTS (
                SELECT 1
                FROM SF_TBL_AS_EQUIP E
                WHERE E.AS_ID = A.AS_ID
                AND E.USE_FLAG = '1'
                <if test="tables != null and tables.size > 0">
                    AND E.TABLE_NAME IN
                    <foreach item="tn" collection="tables" open="(" close=")" separator=",">#{tn}</foreach>
                </if>
                <if test="equipName != null and equipName != ''">
                    AND E.EQMNT_NAME LIKE CONCAT('%', #{equipName}, '%')
                </if>
                )
            </if>
        </where>
        ),
        PAGED AS (
        SELECT
        FILT.*,
        ROW_NUMBER() OVER (
        ORDER BY
        <choose>
            <when test="sortField != null and sortDir != null
                              and (sortField == 'asId' || sortField == 'farmName' || sortField == 'farmCode'
                                  || sortField == 'regionName' || sortField == 'asType' || sortField == 'projectName'
                                  || sortField == 'reqDate' || sortField == 'planDate')
                              and (sortDir == 'asc' || sortDir == 'desc')">
                <choose>
                    <when test="sortField == 'asId'">        AS_ID</when>
                    <when test="sortField == 'farmName'">    FARM_NAME</when>
                    <when test="sortField == 'farmCode'">    FARM_CODE</when>
                    <when test="sortField == 'regionName'">  REGION_NAME</when>
                    <when test="sortField == 'asType'">      AS_TYPE</when>
                    <when test="sortField == 'projectName'"> PROJECT_NAME</when>
                    <when test="sortField == 'reqDate'">     REQ_DATE</when>
                    <when test="sortField == 'planDate'">    PLAN_DATE</when>
                </choose>
                <choose>
                    <when test="sortDir == 'desc'"> DESC </when>
                    <otherwise> ASC </otherwise>
                </choose>
            </when>
            <otherwise> AS_ID DESC </otherwise>
        </choose>
        ) AS RN
        FROM FILT
        )
        SELECT
        AS_ID, FARM_CODE, FARM_NAME, REGION_NAME, FARMER_NAME, PHONE_NUMB,
        FARM_ADDR1, FARM_ADDR2, PROJECT_NAME, REQ_DATE, REQ_USER, AS_TYPE,
        AS_MANAGER, REQ_CONTENT, AS_RESULT, ETC, REG_DATE, UPD_DATE, USE_FLAG,
        STATUS_FLAG, PLAN_DATE, STATUS_LABEL
        FROM PAGED
        WHERE RN &gt; #{offset}
        AND RN &lt;= (#{offset} + #{size})
        ORDER BY RN
    </select>

    <!-- =========================================================
         AS 접수 목록 카운트 (동일 필터)
         ========================================================= -->
    <select id="countAsListFiltered" parameterType="map" resultType="int">
        WITH
        FUTURE_SCH AS (
        SELECT AS_ID, MIN(PLAN_DATE) AS PLAN_DATE
        FROM SF_TBL_AS_SCHEDULE
        WHERE USE_FLAG='1' AND CAST(PLAN_DATE AS DATE) &gt;= CURRENT_DATE
        GROUP BY AS_ID
        ),
        ANY_SCH AS (
        SELECT AS_ID, MIN(PLAN_DATE) AS PLAN_DATE
        FROM SF_TBL_AS_SCHEDULE
        WHERE USE_FLAG='1'
        GROUP BY AS_ID
        ),
        STAT AS (
        SELECT
        AS_ID,
        COUNT(*) AS TOTAL,
        SUM(CASE WHEN COMPLETE_DATE &lt;= CURRENT_TIMESTAMP THEN 1 ELSE 0 END) AS DONE_CNT,
        MIN(CAST(CASE WHEN COMPLETE_DATE IS NULL THEN PLAN_DATE END AS DATE)) AS FIRST_PENDING_PLAN
        FROM SF_TBL_AS_SCHEDULE
        WHERE USE_FLAG='1'
        GROUP BY AS_ID
        ),
        A AS (
        SELECT
        H.AS_ID, H.FARM_CODE, F.FARM_NAME, H.AS_TYPE, H.REG_DATE,
        COALESCE(FUTURE_SCH.PLAN_DATE, ANY_SCH.PLAN_DATE) AS PLAN_DATE,
        CASE
        WHEN H.STATUS_FLAG = '0' THEN '보류'
        WHEN COALESCE(STAT.TOTAL,0) = 0 THEN '대기'
        WHEN COALESCE(STAT.DONE_CNT,0) = COALESCE(STAT.TOTAL,0) THEN '완료'
        WHEN STAT.FIRST_PENDING_PLAN &lt;  CURRENT_DATE THEN '지연'
        WHEN STAT.FIRST_PENDING_PLAN =  CURRENT_DATE THEN '임박'
        WHEN COALESCE(STAT.DONE_CNT,0) &gt; 0 THEN '진행중'
        ELSE '대기'
        END AS STATUS_LABEL
        FROM  SF_TBL_AS_HEADER H
        LEFT  JOIN SF_TBL_FARM  F ON H.FARM_CODE = F.FARM_CODE
        LEFT  JOIN FUTURE_SCH ON FUTURE_SCH.AS_ID = H.AS_ID
        LEFT  JOIN ANY_SCH    ON ANY_SCH.AS_ID    = H.AS_ID
        LEFT  JOIN STAT       ON STAT.AS_ID       = H.AS_ID
        WHERE H.USE_FLAG = '1'
        <if test="includeHold != true">
            AND H.STATUS_FLAG &lt;&gt; '0'
        </if>
        <if test="q != null and q != ''">
            AND (
            F.FARM_NAME     LIKE CONCAT('%', #{q}, '%')
            OR F.FARM_CODE    LIKE CONCAT('%', #{q}, '%')
            OR F.PROJECT_NAME LIKE CONCAT('%', #{q}, '%')
            OR F.REGION_NAME  LIKE CONCAT('%', #{q}, '%')
            OR H.AS_TYPE      LIKE CONCAT('%', #{q}, '%')
            OR H.AS_MANAGER   LIKE CONCAT('%', #{q}, '%')
            OR H.REQ_USER     LIKE CONCAT('%', #{q}, '%')
            OR H.REQ_CONTENT  LIKE CONCAT('%', #{q}, '%')
            )
        </if>
        )
        SELECT COUNT(1) FROM (
        SELECT 1
        FROM A
        <where>
            <include refid="__period_filter_fixed"/>
            <include refid="__start_end_filter"/>

            <if test="farms != null and farms.size > 0">
                AND (
                <foreach item="fc" collection="farms" separator=" OR ">
                    (FARM_CODE = #{fc} OR FARM_NAME LIKE CONCAT('%', #{fc}, '%'))
                </foreach>
                )
            </if>

            <if test="(types != null and types.size > 0) or includeEtc">
                AND (
                <if test="types != null and types.size > 0">
                    AS_TYPE IN
                    <foreach item="t" collection="types" open="(" close=")" separator=",">#{t}</foreach>
                </if>
                <if test="includeEtc">
                    <if test="types != null and types.size > 0"> OR </if>
                    ( AS_TYPE IS NULL
                    OR TRIM(BOTH FROM AS_TYPE) = ''
                    OR AS_TYPE NOT IN ('장비','네트워크','모듈') )
                </if>
                )
            </if>

            <if test="statuses != null and statuses.size > 0">
                AND STATUS_LABEL IN
                <foreach item="s" collection="statuses" open="(" close=")" separator=",">#{s}</foreach>
            </if>

            <if test="(statuses == null or statuses.size == 0)
                          and asStatus != null and asStatus != '' and asStatus != '전체'">
                AND STATUS_LABEL = #{asStatus}
            </if>

            <if test="(tables != null and tables.size > 0) or (equipName != null and equipName != '')">
                AND EXISTS (
                SELECT 1
                FROM SF_TBL_AS_EQUIP E
                WHERE E.AS_ID = A.AS_ID
                AND E.USE_FLAG = '1'
                <if test="tables != null and tables.size > 0">
                    AND E.TABLE_NAME IN
                    <foreach item="tn" collection="tables" open="(" close=")" separator=",">#{tn}</foreach>
                </if>
                <if test="equipName != null and equipName != ''">
                    AND E.EQMNT_NAME LIKE CONCAT('%', #{equipName}, '%')
                </if>
                )
            </if>
        </where>
        ) Z
    </select>

    <!-- =========================================================
         일정 화면용: 날짜/기간/공통 WHERE (H2용)
         ========================================================= -->
    <sql id="__date_expr_for_sched">
        S.PLAN_DATE
    </sql>

    <sql id="__period_filter_sched">
        <if test="params.period != null and params.period != ''">
            <choose>
                <when test="params.period == 'today'">
                    AND <include refid="__date_expr_for_sched"/> &gt;= CAST(CURRENT_DATE AS TIMESTAMP)
                    AND <include refid="__date_expr_for_sched"/> &lt;  CAST(DATEADD('DAY',1,CURRENT_DATE) AS TIMESTAMP)
                </when>
                <when test="params.period == '1w'">
                    AND <include refid="__date_expr_for_sched"/> &gt;=
                    CAST(DATEADD('DAY', -MOD(DAY_OF_WEEK(CURRENT_DATE)+5, 7), CURRENT_DATE) AS TIMESTAMP)
                    AND <include refid="__date_expr_for_sched"/> &lt;
                    CAST(DATEADD('DAY', 7 - MOD(DAY_OF_WEEK(CURRENT_DATE)+5, 7), CURRENT_DATE) AS TIMESTAMP)
                </when>
                <when test="params.period == '1m'">
                    AND <include refid="__date_expr_for_sched"/> &gt;=
                    CAST(DATEADD('DAY', 1 - DAY_OF_MONTH(CURRENT_DATE), CURRENT_DATE) AS TIMESTAMP)
                    AND <include refid="__date_expr_for_sched"/> &lt;
                    CAST(DATEADD('MONTH', 1, DATEADD('DAY', 1 - DAY_OF_MONTH(CURRENT_DATE), CURRENT_DATE)) AS TIMESTAMP)
                </when>
            </choose>
        </if>
        <if test="params.startDate != null">
            AND <include refid="__date_expr_for_sched"/> &gt;= #{params.startDate}
        </if>
        <if test="params.endDate != null">
            AND <include refid="__date_expr_for_sched"/> &lt;= #{params.endDate}
        </if>
    </sql>

    <sql id="_schedule_flat_where">
        WHERE S.USE_FLAG = '1'
        AND H.USE_FLAG = '1'
        AND H.STATUS_FLAG = '1'
        <if test="params.q != null and params.q != ''">
            AND (
            F.FARM_NAME      LIKE CONCAT('%', #{params.q}, '%')
            OR F.FARM_CODE     LIKE CONCAT('%', #{params.q}, '%')
            OR F.PROJECT_NAME  LIKE CONCAT('%', #{params.q}, '%')
            OR F.REGION_NAME   LIKE CONCAT('%', #{params.q}, '%')
            OR H.AS_TYPE       LIKE CONCAT('%', #{params.q}, '%')
            OR H.AS_MANAGER    LIKE CONCAT('%', #{params.q}, '%')
            OR H.REQ_USER      LIKE CONCAT('%', #{params.q}, '%')
            OR H.REQ_CONTENT   LIKE CONCAT('%', #{params.q}, '%')
            OR CAST(H.AS_ID AS VARCHAR) = #{params.q}
            )
        </if>
        <include refid="__period_filter_sched"/>

        <if test="params.completion != null and params.completion != '' and params.completion != '전체'">
            <choose>
                <when test="params.completion == '완료'">
                    AND S.COMPLETE_DATE IS NOT NULL
                    AND CAST(S.COMPLETE_DATE AS DATE) &lt;= CURRENT_DATE
                </when>
                <when test="params.completion == '미완료'">
                    AND ( S.COMPLETE_DATE IS NULL
                    OR CAST(S.COMPLETE_DATE AS DATE) &gt; CURRENT_DATE )
                </when>
            </choose>
        </if>

        <if test="params.farms != null and params.farms.size > 0">
            AND (
            <foreach item="fc" collection="params.farms" separator=" OR ">
                (F.FARM_CODE = #{fc} OR F.FARM_NAME LIKE CONCAT('%', #{fc}, '%'))
            </foreach>
            )
        </if>

        <if test="(params.types != null and params.types.size > 0) or params.includeEtc">
            AND (
            <if test="params.types != null and params.types.size > 0">
                H.AS_TYPE IN
                <foreach item="t" collection="params.types" open="(" close=")" separator=",">#{t}</foreach>
            </if>
            <if test="params.includeEtc">
                <if test="params.types != null and params.types.size > 0"> OR </if>
                ( H.AS_TYPE IS NULL
                OR TRIM(BOTH FROM H.AS_TYPE) = ''
                OR H.AS_TYPE NOT IN ('장비','네트워크','모듈') )
            </if>
            )
        </if>

        <if test="(params.tables != null and params.tables.size > 0) or (params.equipName != null and params.equipName != '')">
            AND EXISTS (
            SELECT 1
            FROM SF_TBL_AS_EQUIP E
            WHERE E.AS_ID = H.AS_ID
            AND E.USE_FLAG = '1'
            <if test="params.tables != null and params.tables.size > 0">
                AND E.TABLE_NAME IN
                <foreach item="tn" collection="params.tables" open="(" close=")" separator=",">#{tn}</foreach>
            </if>
            <if test="params.equipName != null and params.equipName != ''">
                AND E.EQMNT_NAME LIKE CONCAT('%', #{params.equipName}, '%')
            </if>
            )
        </if>
    </sql>

    <!-- =========================================================
         일정 목록(필터/정렬/페이징) — ROW_NUMBER 페이징
         ========================================================= -->
    <select id="selectScheduleRowListWithPaging" parameterType="map" resultType="AsScheduleRowDto">
        WITH BASE AS (
        SELECT
        S.SCHEDULE_ID   AS scheduleId,
        H.AS_ID         AS asId,
        F.FARM_CODE     AS farmCode,
        F.FARM_NAME     AS farmName,
        F.REGION_NAME   AS regionName,
        F.PROJECT_NAME  AS projectName,
        H.AS_TYPE       AS asType,
        H.REQ_DATE      AS reqDate,
        S.PLAN_DATE     AS planDate,
        S.COMPLETE_DATE AS completeDate,
        CASE WHEN S.USE_FLAG = '1' THEN TRUE ELSE FALSE END AS useFlag
        FROM SF_TBL_AS_SCHEDULE S
        JOIN SF_TBL_AS_HEADER   H ON S.AS_ID = H.AS_ID
        LEFT JOIN SF_TBL_FARM   F ON H.FARM_CODE = F.FARM_CODE
        <include refid="_schedule_flat_where"/>
        ),
        PAGED AS (
        SELECT
        BASE.*,
        ROW_NUMBER() OVER (
        ORDER BY
        <choose>
            <when test="params.sortField != null and params.sortDir != null
                              and (params.sortField == 'asId' || params.sortField == 'farmName' || params.sortField == 'farmCode'
                                  || params.sortField == 'regionName' || params.sortField == 'projectName' || params.sortField == 'asType'
                                  || params.sortField == 'reqDate' || params.sortField == 'planDate' || params.sortField == 'completeDate')
                              and (params.sortDir == 'asc' || params.sortDir == 'desc')">
                <choose>
                    <when test="params.sortField == 'asId'">         asId</when>
                    <when test="params.sortField == 'farmName'">     farmName</when>
                    <when test="params.sortField == 'farmCode'">     farmCode</when>
                    <when test="params.sortField == 'regionName'">   regionName</when>
                    <when test="params.sortField == 'projectName'">  projectName</when>
                    <when test="params.sortField == 'asType'">       asType</when>
                    <when test="params.sortField == 'reqDate'">      reqDate</when>
                    <when test="params.sortField == 'planDate'">     planDate</when>
                    <when test="params.sortField == 'completeDate'"> completeDate</when>
                </choose>
                <choose>
                    <when test="params.sortDir == 'desc'"> DESC </when>
                    <otherwise> ASC </otherwise>
                </choose>
            </when>
            <otherwise> planDate ASC, asId ASC </otherwise>
        </choose>
        ) AS RN
        FROM BASE
        )
        SELECT
        scheduleId, asId, farmCode, farmName, regionName, projectName,
        asType, reqDate, planDate, completeDate, useFlag
        FROM PAGED
        WHERE RN &gt; #{params.offset}
        AND RN &lt;= (#{params.offset} + #{params.size})
        ORDER BY RN
    </select>

    <!-- =========================================================
         일정 목록 카운트
         ========================================================= -->
    <select id="countScheduleRowList" parameterType="map" resultType="int">
        SELECT COUNT(1)
        FROM SF_TBL_AS_SCHEDULE S
        JOIN SF_TBL_AS_HEADER   H ON S.AS_ID = H.AS_ID
        LEFT JOIN SF_TBL_FARM   F ON H.FARM_CODE = F.FARM_CODE
        <include refid="_schedule_flat_where"/>
    </select>

    <!-- =========================================================
         일정 엑셀용 (정렬만, 페이징 없음)
         ========================================================= -->
    <select id="selectScheduleRowListForExport" parameterType="map" resultType="AsScheduleRowDto">
        SELECT
        S.SCHEDULE_ID   AS scheduleId,
        H.AS_ID         AS asId,
        F.FARM_CODE     AS farmCode,
        F.FARM_NAME     AS farmName,
        F.REGION_NAME   AS regionName,
        F.PROJECT_NAME  AS projectName,
        H.AS_TYPE       AS asType,
        H.REQ_DATE      AS reqDate,
        S.PLAN_DATE     AS planDate,
        S.COMPLETE_DATE AS completeDate,
        CASE WHEN S.USE_FLAG = '1' THEN TRUE ELSE FALSE END AS useFlag
        FROM SF_TBL_AS_SCHEDULE S
        JOIN SF_TBL_AS_HEADER   H ON S.AS_ID = H.AS_ID
        LEFT JOIN SF_TBL_FARM   F ON H.FARM_CODE = F.FARM_CODE
        <include refid="_schedule_flat_where"/>
        ORDER BY
        <choose>
            <when test="params.sortField != null and params.sortDir != null
                  and (params.sortField == 'asId' || params.sortField == 'farmName' || params.sortField == 'farmCode'
                      || params.sortField == 'regionName' || params.sortField == 'projectName' || params.sortField == 'asType'
                      || params.sortField == 'reqDate' || params.sortField == 'planDate' || params.sortField == 'completeDate')
                  and (params.sortDir == 'asc' || params.sortDir == 'desc')">
                <choose>
                    <when test="params.sortField == 'asId'">         H.AS_ID</when>
                    <when test="params.sortField == 'farmName'">     F.FARM_NAME</when>
                    <when test="params.sortField == 'farmCode'">     F.FARM_CODE</when>
                    <when test="params.sortField == 'regionName'">   F.REGION_NAME</when>
                    <when test="params.sortField == 'projectName'">  F.PROJECT_NAME</when>
                    <when test="params.sortField == 'asType'">       H.AS_TYPE</when>
                    <when test="params.sortField == 'reqDate'">      H.REQ_DATE</when>
                    <when test="params.sortField == 'planDate'">     S.PLAN_DATE</when>
                    <when test="params.sortField == 'completeDate'"> S.COMPLETE_DATE</when>
                </choose>
                <choose>
                    <when test="params.sortDir == 'desc'"> DESC </when>
                    <otherwise> ASC </otherwise>
                </choose>
            </when>
            <otherwise> S.PLAN_DATE ASC, H.AS_ID ASC </otherwise>
        </choose>
    </select>

    <!-- =========================================================
         필터용 장비 테이블 Distinct
         ========================================================= -->
    <select id="selectDistinctEquipTablesForFilter" resultType="string">
        SELECT DISTINCT TABLE_NAME
        FROM SF_TBL_AS_EQUIP
        WHERE USE_FLAG = '1'
        ORDER BY TABLE_NAME
    </select>

</mapper>
