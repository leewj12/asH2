<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.inpro.asBoard.as.mapper.DashMapper">

    <!-- ========================================================================
         1) 공통: REG_DATE를 date로
         ======================================================================== -->
    <sql id="__date_expr_regdate">
        CAST(H.REG_DATE AS DATE)
    </sql>

    <!-- ========================================================================
         2) 공통: 기간 프리셋 (REG_DATE 기준, 고정 경계)
            - today/1d  : 오늘 00:00 ~ 내일 00:00
            - 1w        : 이번주(월~다음주 월)
            - 1m        : 이번달 1일 00:00 ~ 다음달 1일 00:00
         ======================================================================== -->
    <sql id="__period_filter_regdate">
        <choose>
            <when test="period == 'today' or period == '1d'">
                <![CDATA[
          AND H.REG_DATE >= CAST(CURRENT_DATE AS TIMESTAMP)
          AND H.REG_DATE <  DATEADD('DAY', 1, CAST(CURRENT_DATE AS TIMESTAMP))
        ]]>
            </when>
            <when test="period == '1w'">
                <![CDATA[
          AND H.REG_DATE >= DATEADD(
            'DAY',
            -MOD(DAY_OF_WEEK(CURRENT_DATE) + 5, 7),
            CAST(CURRENT_DATE AS TIMESTAMP)
          )
          AND H.REG_DATE <  DATEADD(
            'DAY',
            7 - MOD(DAY_OF_WEEK(CURRENT_DATE) + 5, 7),
            CAST(CURRENT_DATE AS TIMESTAMP)
          )
        ]]>
            </when>
            <when test="period == '1m'">
                <![CDATA[
          AND H.REG_DATE >= DATEADD(
            'DAY',
            1 - DAY_OF_MONTH(CURRENT_DATE),
            CAST(CURRENT_DATE AS TIMESTAMP)
          )
          AND H.REG_DATE <  DATEADD(
            'MONTH', 1,
            DATEADD('DAY', 1 - DAY_OF_MONTH(CURRENT_DATE), CAST(CURRENT_DATE AS TIMESTAMP))
          )
        ]]>
            </when>
            <otherwise/>
        </choose>
    </sql>

    <!-- ========================================================================
         3) 공통: AS_TYPE -> 장비/네트워크/모듈/기타 라벨
         ======================================================================== -->
    <sql id="__as_type_label">
        CASE
        WHEN H.AS_TYPE IS NULL OR TRIM(H.AS_TYPE) = '' OR H.AS_TYPE = '(미지정)' THEN '기타'
        WHEN H.AS_TYPE LIKE '%네트워크%' OR H.AS_TYPE LIKE '%통신%'
        OR LOWER(H.AS_TYPE) LIKE '%network%' OR LOWER(H.AS_TYPE) LIKE '%comm%' THEN '네트워크'
        WHEN H.AS_TYPE LIKE '%모듈%' OR LOWER(H.AS_TYPE) LIKE '%module%' OR LOWER(H.AS_TYPE) LIKE '%mdl%' THEN '모듈'
        WHEN H.AS_TYPE LIKE '%장비%' OR LOWER(H.AS_TYPE) LIKE '%equip%'  OR LOWER(H.AS_TYPE) LIKE '%eqp%' THEN '장비'
        ELSE '기타'
        END
    </sql>

    <!-- ========================================================================
         4) 월별 통계 (REG_DATE 기준)
         * "month", "count" 예약어 충돌 방지 → 더블쿼트
         ======================================================================== -->
    <select id="selectMonthlyStats" resultType="DashMonthlyStatDto">
        WITH BASE AS (
        SELECT
        DATEADD(
        'DAY',
        1 - DAY_OF_MONTH(CAST(H.REG_DATE AS DATE)),
        CAST(CAST(H.REG_DATE AS DATE) AS TIMESTAMP)
        ) AS mkey,
        H.AS_ID
        FROM SF_TBL_AS_HEADER H
        WHERE H.USE_FLAG = '1'
        ),
        AGG AS (
        SELECT mkey, COUNT(DISTINCT AS_ID) AS cnt
        FROM BASE
        GROUP BY mkey
        )
        SELECT
        FORMATDATETIME(mkey, 'yyyy-MM') AS "month",
        cnt                              AS "count"
        FROM AGG
        ORDER BY mkey ASC
    </select>

    <!-- ========================================================================
         5) 임박 리스트 (PLAN_DATE 기준)
         * LIMIT ? 대신 RN 필터로 TopN
         ======================================================================== -->
    <select id="selectUpcomingList" resultType="DashUpcomingDto" parameterType="map">
        WITH NEXT_PLAN AS (
        SELECT
        S.AS_ID,
        S.PLAN_DATE,
        ROW_NUMBER() OVER (PARTITION BY S.AS_ID ORDER BY S.PLAN_DATE) AS RN
        FROM SF_TBL_AS_SCHEDULE S
        JOIN SF_TBL_AS_HEADER   H ON H.AS_ID = S.AS_ID
        WHERE S.USE_FLAG = '1'
        AND H.USE_FLAG = '1'
        AND S.PLAN_DATE >= CAST(CURRENT_DATE AS TIMESTAMP)
        AND (
        S.COMPLETE_DATE IS NULL
        OR S.COMPLETE_DATE >= DATEADD('DAY', 1, CAST(CURRENT_DATE AS TIMESTAMP))
        )
        ),
        PICKED AS (
        SELECT
        H.AS_ID        AS asId,
        F.FARM_CODE    AS farmCode,
        F.FARM_NAME    AS farmName,
        F.REGION_NAME  AS regionName,
        H.AS_TYPE      AS asType,
        F.PROJECT_NAME AS projectName,
        H.REQ_DATE     AS reqDate,
        NP.PLAN_DATE   AS planDate,
        CASE WHEN H.STATUS_FLAG = '1' THEN TRUE ELSE FALSE END AS statusFlag,
        ROW_NUMBER() OVER (ORDER BY NP.PLAN_DATE, H.AS_ID) AS RN2
        FROM NEXT_PLAN NP
        JOIN SF_TBL_AS_HEADER H ON H.AS_ID = NP.AS_ID
        LEFT JOIN SF_TBL_FARM  F ON F.FARM_CODE = H.FARM_CODE
        WHERE NP.RN = 1
        )
        SELECT
        asId, farmCode, farmName, regionName, asType, projectName, reqDate, planDate, statusFlag
        FROM PICKED
        WHERE RN2 &lt;= #{limit}
        ORDER BY RN2
    </select>

    <!-- ========================================================================
         6) 요약(4분류 × 기간) — REG_DATE + from/to
         ======================================================================== -->
    <select id="selectStatusCountByPeriod" resultType="DashSummaryRow">
        SELECT
        <include refid="__as_type_label"/> AS statusLabel,
        COUNT(DISTINCT H.AS_ID)            AS "count"
        FROM SF_TBL_AS_HEADER H
        WHERE H.USE_FLAG = '1'
        <if test="fromDate != null or toDate != null">
            <if test="fromDate != null">
                <![CDATA[ AND CAST(H.REG_DATE AS DATE) >= #{fromDate} ]]>
            </if>
            <if test="toDate != null">
                <![CDATA[ AND CAST(H.REG_DATE AS DATE) <  DATEADD('DAY', 1, CAST(#{toDate} AS DATE)) ]]>
            </if>
        </if>
        GROUP BY <include refid="__as_type_label"/>
        ORDER BY "count" DESC, statusLabel ASC
    </select>

    <!-- ========================================================================
         7) 종합(범용) — TopN + firstAsId (REG_DATE 기준)
         ======================================================================== -->
    <select id="selectAggregate" resultType="DashAggregateItemDto">
        <choose>
            <!-- dimension=farm -->
            <when test="dimension == 'farm'">
                WITH G AS (
                SELECT
                F.FARM_CODE                          AS farmCode,
                COALESCE(F.FARM_NAME, '(미지정)')    AS farmName,
                COUNT(DISTINCT H.AS_ID)              AS cnt,
                MIN(H.AS_ID)                         AS minAsId
                FROM SF_TBL_AS_HEADER H
                LEFT JOIN SF_TBL_FARM F ON F.FARM_CODE = H.FARM_CODE
                WHERE H.USE_FLAG = '1'
                <include refid="__period_filter_regdate"/>
                GROUP BY F.FARM_CODE, F.FARM_NAME
                ),
                R AS (
                SELECT
                farmCode, farmName, cnt,
                CASE WHEN cnt = 1 THEN minAsId END AS firstAsId,
                ROW_NUMBER() OVER (ORDER BY cnt DESC, farmName ASC) rn
                FROM G
                )
                SELECT
                farmName AS label,
                cnt      AS "count",
                farmCode,
                farmName,
                firstAsId
                FROM R
                WHERE rn &lt;= #{topN}
                ORDER BY cnt DESC, farmName ASC
            </when>

            <!-- dimension=equipment -->
            <when test="dimension == 'equipment'">
                WITH G AS (
                SELECT
                E.TABLE_NAME                 AS tableName,
                COUNT(DISTINCT H.AS_ID)      AS cnt,
                MIN(H.AS_ID)                 AS minAsId
                FROM SF_TBL_AS_HEADER H
                JOIN SF_TBL_AS_EQUIP  E ON E.AS_ID = H.AS_ID AND E.USE_FLAG = '1'
                WHERE H.USE_FLAG = '1'
                <include refid="__period_filter_regdate"/>
                GROUP BY E.TABLE_NAME
                ),
                R AS (
                SELECT
                tableName, cnt,
                CASE WHEN cnt = 1 THEN minAsId END AS firstAsId,
                ROW_NUMBER() OVER (ORDER BY cnt DESC, tableName ASC) rn
                FROM G
                )
                SELECT
                tableName AS label,
                cnt       AS "count",
                tableName,
                firstAsId
                FROM R
                WHERE rn &lt;= #{topN}
                ORDER BY cnt DESC, label ASC
            </when>

            <!-- dimension=category -->
            <when test="dimension == 'category'">
                WITH G AS (
                SELECT
                CASE
                WHEN H.AS_TYPE IS NULL OR TRIM(H.AS_TYPE) = '' THEN '기타'
                WHEN H.AS_TYPE IN ('장비','네트워크','모듈') THEN H.AS_TYPE
                ELSE '기타'
                END                          AS category,
                COUNT(DISTINCT H.AS_ID)      AS cnt,
                MIN(H.AS_ID)                 AS minAsId
                FROM SF_TBL_AS_HEADER H
                WHERE H.USE_FLAG = '1'
                <include refid="__period_filter_regdate"/>
                GROUP BY
                CASE
                WHEN H.AS_TYPE IS NULL OR TRIM(H.AS_TYPE) = '' THEN '기타'
                WHEN H.AS_TYPE IN ('장비','네트워크','모듈') THEN H.AS_TYPE
                ELSE '기타'
                END
                ),
                R AS (
                SELECT
                category, cnt,
                CASE WHEN cnt = 1 THEN minAsId END AS firstAsId,
                ROW_NUMBER() OVER (ORDER BY cnt DESC, category ASC) rn
                FROM G
                )
                SELECT
                category AS label,
                cnt      AS "count",
                firstAsId
                FROM R
                WHERE rn &lt;= #{topN}
                ORDER BY cnt DESC, label ASC
            </when>

            <otherwise>
                SELECT CAST('Invalid dimension' AS VARCHAR(32)) AS label, 0 AS "count"
            </otherwise>
        </choose>
    </select>

    <!-- ========================================================================
         8) 필터 목록 — 농가
         ======================================================================== -->
    <select id="selectFarmList" resultType="DashCodeNameDto">
        SELECT DISTINCT
        H.FARM_CODE                       AS code,
        COALESCE(F.FARM_NAME, '(미지정)') AS name
        FROM SF_TBL_AS_HEADER H
        LEFT JOIN SF_TBL_FARM F ON F.FARM_CODE = H.FARM_CODE
        WHERE H.USE_FLAG = '1'
        ORDER BY name ASC
    </select>

    <!-- ========================================================================
         9) 필터 목록 — 장비
         ======================================================================== -->
    <select id="selectEquipmentList" resultType="DashCodeNameDto">
        SELECT DISTINCT
        E.TABLE_NAME AS code,
        E.TABLE_NAME AS name
        FROM SF_TBL_AS_EQUIP E
        JOIN SF_TBL_AS_HEADER H ON H.AS_ID = E.AS_ID
        WHERE E.USE_FLAG = '1' AND H.USE_FLAG = '1'
        ORDER BY name ASC
    </select>

    <!-- ========================================================================
         10) 의존형 — 농가→장비
         ======================================================================== -->
    <select id="selectEquipmentListByFarm" resultType="DashCodeNameDto">
        SELECT DISTINCT
        E.TABLE_NAME AS code,
        E.TABLE_NAME AS name
        FROM SF_TBL_AS_EQUIP E
        JOIN SF_TBL_AS_HEADER H ON H.AS_ID = E.AS_ID AND H.USE_FLAG = '1'
        WHERE E.USE_FLAG = '1'
        AND H.FARM_CODE = #{farmCode}
        ORDER BY name ASC
    </select>

    <!-- ========================================================================
         11) 의존형 — 장비→농가
         ======================================================================== -->
    <select id="selectFarmListByEquipment" resultType="DashCodeNameDto">
        SELECT DISTINCT
        H.FARM_CODE AS code,
        COALESCE(F.FARM_NAME, '(미지정)') AS name
        FROM SF_TBL_AS_HEADER H
        JOIN SF_TBL_AS_EQUIP  E ON E.AS_ID = H.AS_ID AND E.USE_FLAG = '1'
        LEFT JOIN SF_TBL_FARM  F ON F.FARM_CODE = H.FARM_CODE
        WHERE H.USE_FLAG = '1'
        AND E.TABLE_NAME = #{tableName}
        ORDER BY name ASC
    </select>

    <!-- ========================================================================
         12) 선택 종합 — 농가 기준 장비 집계
         ======================================================================== -->
    <select id="selectEquipmentByFarm" resultType="DashAggregateItemDto">
        WITH G AS (
        SELECT
        E.TABLE_NAME               AS tableName,
        COUNT(DISTINCT H.AS_ID)    AS cnt,
        MIN(H.AS_ID)               AS minAsId
        FROM SF_TBL_AS_HEADER H
        JOIN SF_TBL_AS_EQUIP  E ON E.AS_ID = H.AS_ID AND E.USE_FLAG = '1'
        WHERE H.USE_FLAG = '1'
        AND H.FARM_CODE = #{farmCode}
        <include refid="__period_filter_regdate"/>
        GROUP BY E.TABLE_NAME
        )
        SELECT
        tableName AS label,
        cnt       AS "count",
        tableName,
        CASE WHEN cnt = 1 THEN minAsId END AS firstAsId
        FROM G
        ORDER BY "count" DESC, label ASC
    </select>

    <!-- ========================================================================
         13) 선택 종합 — 농가 기준 카테고리 집계
         ======================================================================== -->
    <select id="selectCategoryByFarm" resultType="DashAggregateItemDto">
        WITH G AS (
        SELECT
        COALESCE(H.AS_TYPE, '(미지정)') AS category,
        COUNT(DISTINCT H.AS_ID)         AS cnt,
        MIN(H.AS_ID)                    AS minAsId
        FROM SF_TBL_AS_HEADER H
        WHERE H.USE_FLAG = '1'
        AND H.FARM_CODE = #{farmCode}
        <include refid="__period_filter_regdate"/>
        GROUP BY H.AS_TYPE
        )
        SELECT
        category AS label,
        cnt      AS "count",
        CASE WHEN cnt = 1 THEN minAsId END AS firstAsId
        FROM G
        ORDER BY "count" DESC, label ASC
    </select>

    <!-- ========================================================================
         14) 선택 종합 — 장비 기준 농가 집계
         ======================================================================== -->
    <select id="selectFarmByEquipment" resultType="DashAggregateItemDto">
        WITH G AS (
        SELECT
        H.FARM_CODE                       AS farmCode,
        COALESCE(F.FARM_NAME, '(미지정)') AS farmName,
        COUNT(DISTINCT H.AS_ID)           AS cnt,
        MIN(H.AS_ID)                      AS minAsId
        FROM SF_TBL_AS_HEADER H
        JOIN SF_TBL_AS_EQUIP  E ON E.AS_ID = H.AS_ID AND E.USE_FLAG = '1'
        LEFT JOIN SF_TBL_FARM  F ON F.FARM_CODE = H.FARM_CODE
        WHERE H.USE_FLAG = '1'
        AND E.TABLE_NAME = #{tableName}
        <include refid="__period_filter_regdate"/>
        GROUP BY H.FARM_CODE, F.FARM_NAME
        )
        SELECT
        farmName AS label,
        cnt      AS "count",
        farmCode, farmName,
        CASE WHEN cnt = 1 THEN minAsId END AS firstAsId
        FROM G
        ORDER BY cnt DESC, label ASC
    </select>

    <!-- ========================================================================
         15) 선택 종합 — 장비 기준 카테고리 집계
         ======================================================================== -->
    <select id="selectCategoryByEquipment" resultType="DashAggregateItemDto">
        WITH G AS (
        SELECT
        COALESCE(H.AS_TYPE, '(미지정)') AS category,
        COUNT(DISTINCT H.AS_ID)         AS cnt,
        MIN(H.AS_ID)                    AS minAsId
        FROM SF_TBL_AS_HEADER H
        JOIN SF_TBL_AS_EQUIP  E ON E.AS_ID = H.AS_ID AND E.USE_FLAG = '1'
        WHERE H.USE_FLAG = '1'
        AND E.TABLE_NAME = #{tableName}
        <include refid="__period_filter_regdate"/>
        GROUP BY H.AS_TYPE
        )
        SELECT
        category AS label,
        cnt      AS "count",
        CASE WHEN cnt = 1 THEN minAsId END AS firstAsId
        FROM G
        ORDER BY "count" DESC, label ASC
    </select>

    <!-- ========================================================================
         16) 선택 종합 — 농가+장비 동시
         ======================================================================== -->
    <select id="selectCategoryByFarmAndEquipment" resultType="DashAggregateItemDto">
        WITH G AS (
        SELECT
        COALESCE(H.AS_TYPE, '(미지정)') AS category,
        COUNT(DISTINCT H.AS_ID)         AS cnt,
        MIN(H.AS_ID)                    AS minAsId
        FROM SF_TBL_AS_HEADER H
        WHERE H.USE_FLAG = '1'
        <if test="farmCode != null and farmCode != ''">
            AND H.FARM_CODE = #{farmCode}
        </if>
        <if test="tableName != null and tableName != ''">
            AND EXISTS (
            SELECT 1
            FROM SF_TBL_AS_EQUIP E
            WHERE E.AS_ID = H.AS_ID
            AND E.USE_FLAG = '1'
            AND E.TABLE_NAME = #{tableName}
            )
        </if>
        <include refid="__period_filter_regdate"/>
        GROUP BY H.AS_TYPE
        )
        SELECT
        category AS label,
        cnt      AS "count",
        CASE WHEN cnt = 1 THEN minAsId END AS firstAsId
        FROM G
        ORDER BY "count" DESC, label ASC
    </select>

    <!-- ========================================================================
         17) 타임라인 — REG_DATE 기준 + bucket(day|month)
         ======================================================================== -->
    <select id="selectTimeSeries" resultType="DashTimeSeriesPointDto">
        WITH BASE AS (
        SELECT
        CASE
        WHEN #{bucket} = 'day' THEN CAST(<include refid="__date_expr_regdate"/> AS DATE)
        ELSE CAST(
        DATEADD('DAY', 1 - DAY_OF_MONTH(<include refid="__date_expr_regdate"/>),
        CAST(<include refid="__date_expr_regdate"/> AS TIMESTAMP)
        ) AS DATE
        )
        END AS dkey,
        H.AS_ID
        FROM SF_TBL_AS_HEADER H
        <if test="tableName != null and tableName != ''">
            JOIN SF_TBL_AS_EQUIP E
            ON E.AS_ID = H.AS_ID AND E.USE_FLAG = '1'
            AND E.TABLE_NAME = #{tableName}
        </if>
        WHERE H.USE_FLAG = '1'
        <if test="farmCode != null and farmCode != ''">
            AND H.FARM_CODE = #{farmCode}
        </if>
        <include refid="__period_filter_regdate"/>
        ),
        AGG AS (
        SELECT dkey,
        COUNT(DISTINCT AS_ID) AS cnt,
        MIN(AS_ID)            AS minAsId
        FROM BASE
        GROUP BY dkey
        )
        SELECT
        CASE WHEN #{bucket} = 'day'
        THEN FORMATDATETIME(dkey, 'yyyy-MM-dd')
        ELSE FORMATDATETIME(dkey, 'yyyy-MM')
        END AS bucket,
        cnt AS "count",
        CASE WHEN cnt = 1 THEN minAsId END AS firstAsId,
        CASE WHEN #{bucket} = 'day'
        THEN CONCAT(FORMATDATETIME(dkey, 'yyyy-MM-dd'), 'T00:00')
        ELSE CONCAT(FORMATDATETIME(dkey, 'yyyy-MM-01'), 'T00:00')
        END AS fromDate,
        CASE WHEN #{bucket} = 'day'
        THEN CONCAT(FORMATDATETIME(dkey, 'yyyy-MM-dd'), 'T23:59')
        ELSE CONCAT(FORMATDATETIME(LAST_DAY(dkey), 'yyyy-MM-dd'), 'T23:59')
        END AS toDate
        FROM AGG
        ORDER BY dkey ASC
    </select>

    <!-- ========================================================================
         18) 지역별 AS 건수
         * CHARINDEX/LEFT/LEN → LOCATE/SUBSTRING/LENGTH
         * LTRIM/RTRIM → TRIM
         ======================================================================== -->
    <select id="selectSidoCounts" resultType="map" parameterType="map">
        WITH AS_BASE AS (
        SELECT H.AS_ID, H.FARM_CODE, F.REGION_NAME
        FROM SF_TBL_AS_HEADER H
        INNER JOIN SF_TBL_FARM F
        ON F.FARM_CODE = H.FARM_CODE
        AND F.USE_FLAG = '1'   <!-- 필요 없으면 제거 가능 -->
        <where>
            AND H.USE_FLAG = '1'
            <if test="startDate != null and startDate != ''">
                <choose>
                    <when test="dateBy == 'plan'"> AND H.PLAN_DATE &gt;= #{startDate} </when>
                    <when test="dateBy == 'done'"> AND H.DONE_DATE &gt;= #{startDate} </when>
                    <otherwise>                    AND H.REG_DATE  &gt;= #{startDate} </otherwise>
                </choose>
            </if>
            <if test="endDate != null and endDate != ''">
                <choose>
                    <when test="dateBy == 'plan'"> AND H.PLAN_DATE &lt;  #{endDate} </when>
                    <when test="dateBy == 'done'"> AND H.DONE_DATE &lt;  #{endDate} </when>
                    <otherwise>                    AND H.REG_DATE  &lt;  #{endDate} </otherwise>
                </choose>
            </if>
            <if test="status != null and status != ''">
                AND H.STATUS = #{status}
            </if>
        </where>
        ),
        BASE AS (
        /* REGION_NAME에서 시·도 후보 추출: '/' 앞, 없으면 첫 공백 앞 */
        SELECT
        TRIM(
        CASE
        WHEN REGION_NAME IS NULL OR REGION_NAME = '' THEN ''
        WHEN LOCATE('/', REGION_NAME) > 0
        THEN SUBSTRING(REGION_NAME, 1, LOCATE('/', REGION_NAME) - 1)
        ELSE SUBSTRING(
        REGION_NAME,
        1,
        CASE
        WHEN LOCATE(' ', REGION_NAME) > 0
        THEN LOCATE(' ', REGION_NAME) - 1
        ELSE LENGTH(REGION_NAME)
        END
        )
        END
        ) AS SIDO_RAW
        FROM AS_BASE
        ),
        STD AS (
        /* 시·도 표준화 */
        SELECT
        CASE
        WHEN SIDO_RAW LIKE '서울%' THEN '서울'
        WHEN SIDO_RAW LIKE '부산%' THEN '부산'
        WHEN SIDO_RAW LIKE '대구%' THEN '대구'
        WHEN SIDO_RAW LIKE '인천%' THEN '인천'
        WHEN SIDO_RAW LIKE '광주%' THEN '광주'
        WHEN SIDO_RAW LIKE '대전%' THEN '대전'
        WHEN SIDO_RAW LIKE '울산%' THEN '울산'
        WHEN SIDO_RAW LIKE '세종%' THEN '세종'
        WHEN SIDO_RAW LIKE '경기%' THEN '경기'
        WHEN SIDO_RAW LIKE '강원%' THEN '강원'
        WHEN SIDO_RAW LIKE '충북%' THEN '충북'
        WHEN SIDO_RAW LIKE '충남%' THEN '충남'
        WHEN SIDO_RAW LIKE '전북%' THEN '전북'
        WHEN SIDO_RAW LIKE '전남%' THEN '전남'
        WHEN SIDO_RAW LIKE '경북%' THEN '경북'
        WHEN SIDO_RAW LIKE '경남%' THEN '경남'
        WHEN SIDO_RAW LIKE '제주%' THEN '제주'
        ELSE SIDO_RAW
        END AS SIDO_STD
        FROM BASE
        )
        SELECT
        SIDO_STD AS "sido",
        COUNT(*) AS "as_cnt"
        FROM STD
        WHERE NULLIF(SIDO_STD, '') IS NOT NULL
        GROUP BY SIDO_STD
        ORDER BY "as_cnt" DESC
    </select>

</mapper>
